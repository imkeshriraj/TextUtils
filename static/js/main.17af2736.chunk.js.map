{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","placeholder","rows","value","onChange","event","console","log","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","isRequired","aboutText","contact","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.17af2736.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      \r\n       \r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype=  {\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string,\r\n    contact:PropTypes.string,\r\n \r\n}\r\n\r\n// Navbar.defaultProps=  {\r\n//     title:'Set title',\r\n//     aboutText:'Set ABout i=us',\r\n//     contact:'Set',\r\n \r\n// }","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        console.log('UpperCase Was Clicked'+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n        \r\n    }\r\n    const handleLpClick=()=>{\r\n        console.log('UpperCase Was Clicked'+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n\r\n        \r\n    }\r\n    const handleCopy=()=>{\r\n       \r\n        var text=document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n\r\n        \r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log('UpperCase Was handleOnChange');\r\n        setText(event.target.value)\r\n        \r\n    }\r\n    const [text,setText]=useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading} -</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" placeholder=\"Enter Your Text Here\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'gray':'white',\r\n            \r\n            color:props.mode==='dark'?'white':'#042743'}}></textarea>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLpClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>Your Text Sumary</h1>\r\n            <p>{text.split(' ').length} Word and {text.length} character's</p>\r\n            <p>{0.008* text.split(' ').length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter Something in the Text Box\"}</p>\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize =(word)=>{\r\n        const lower =word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&      <div>\r\n          <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\n// let name=\"Raj\";\nfunction App() {\n\n  const [mode, setMode] = useState('light'); //whether dark mode enable or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark Mode has been Enabled', \"success\");\n      document.title = `TextUtil's- Dark Mode`;\n      // setInterval(() => {\n\n      //   document.title=`TextUtils is amazing`;\n      // }, 2000);\n      // setInterval(() => {\n\n      //   document.title=`Install it TextUtils `;\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode has been Enabled', \"success\");\n      document.title = `TextUtil's- Light Mode`;\n\n\n\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TestUtil's\" mode={mode} aboutText=\"About-Us\" contact=\"contact-Us\" toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-5\">\n      <TextForm heading=\"Enter the Text to Analyze Below\" mode={mode} showAlert={showAlert} />\n\n{/* \n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route excat path=\"/\">\n          \n        <TextForm heading=\"Enter the Text to Analyze Below\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch> */}\n      </div>\n        {/* </Router> */}\n       \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}